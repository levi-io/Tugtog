// Generated by LiveScript 1.2.0
var themes, state, animations, app;
themes = [
  {
    "name": "beach",
    "bg": "beach.png",
    "note": "Crab Note.png",
    "menu": "beach-menu.png"
  }, {
    "name": "bukid",
    "bg": "bukid.png",
    "note": "Rice Note.png",
    "menu": "bukid-menu.png"
  }, {
    "name": "barrio",
    "bg": "barrio.png",
    "note": "Chick Note.png",
    "menu": "barrio-menu.png"
  }
];
state = {};
animations = {
  "hitting": ['1.png', '3.png', '2.png', '1.png']
};
app = angular.module('tugtog', []);
app.controller('Main', function($scope, $http, $q){
  var this$ = this;
  $scope.current = 'levels';
  $scope.currentLevel = 0;
  $scope.game = {};
  $scope.themes = themes;
  $scope.score = 0;
  $scope.spriteReq = $http.get('/sprites/sprites.json');
  $scope.levelReq = $http.get('/levels/levels.json');
  $q.all([$scope.spriteReq, $scope.levelReq]).then(function(values){
    var canvas;
    $scope.sprites = values[0].data;
    $scope.levels = values[1].data;
    canvas = $('#tugtog')[0];
    return $scope.game = new Game(canvas, $scope.levels, $scope.sprites, $scope);
  });
  $scope.getTheme = function(theme){
    return find(function(x){
      return x.name === theme;
    })(
    $scope.themes);
  };
  $scope.next = function(){
    if ($scope.currentLevel < $scope.levels.length - 1) {
      return $scope.currentLevel += 1;
    }
  };
  $scope.back = function(){
    if ($scope.currentLevel > 0) {
      return $scope.currentLevel -= 1;
    }
  };
  $scope.keydown = function(e){
    var lane, ref$, candidate;
    lane = (ref$ = $scope.game.level) != null ? ref$.lanes[settings.keys[e.which]] : void 8;
    if (lane) {
      lane.opacity = 0.8;
      candidate = head(
      sortBy(function(it){
        return Math.abs(it.diff);
      })(
      map(function(note){
        $scope.game.level.gradeNote(note);
        return note;
      })(
      filter(function(it){
        return it.lane.key === lane.key;
      })(
      $scope.game.notesToRender))));
      if ((candidate != null && candidate.isActive) && $scope.game.level.gradeNote(candidate) !== "ignored") {
        return $scope.game.triggerNote(candidate);
      }
    }
  };
  $scope.keyup = function(e){
    var lane, ref$;
    lane = (ref$ = $scope.game.level) != null ? ref$.lanes[settings.keys[e.which]] : void 8;
    if (lane) {
      return lane.opacity = 0;
    }
  };
  $scope.playSong = function(level){
    $scope.game.init();
    $scope.current = 'game';
    $scope.game.level = new Level(level);
    $scope.game.start();
    return state.isDone = false;
  };
  return $scope.endSong = function(){
    $scope.current = 'levels';
    $scope.game.level = {};
    return $scope.game.reset();
  };
});